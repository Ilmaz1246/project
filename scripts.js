document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const navUl = document.querySelector('nav ul');

    mobileMenuBtn.addEventListener('click', function() {
        navUl.classList.toggle('active');
        this.querySelector('i').classList.toggle('fa-times');
        this.querySelector('i').classList.toggle('fa-bars');
    });

    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            
            if (this.getAttribute('href') === '#') return;
            
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                window.scrollTo({
                    top: target.offsetTop - 70,
                    behavior: 'smooth'
                });
                
                if (navUl.classList.contains('active')) {
                    navUl.classList.remove('active');
                    mobileMenuBtn.querySelector('i').classList.remove('fa-times');
                    mobileMenuBtn.querySelector('i').classList.add('fa-bars');
                }
            }
        });
    });

    const orderForm = document.getElementById('orderForm');
    if (orderForm) {
        orderForm.addEventListener('submit', async function(e) {
            e.preventDefault();

            const name = document.getElementById('name').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const service = document.getElementById('service').value;
            
            if (!name || !phone || !service) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è, –¢–µ–ª–µ—Ñ–æ–Ω –∏ –£—Å–ª—É–≥–∞');
                return;
            }

            const serviceNames = {
                'rent': '–ê—Ä–µ–Ω–¥–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
                'cargo': '–ì—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏',
                'pets': '–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö',
                'tour': '–ü–æ–µ–∑–¥–∫–∞ —Å —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥–æ–º',
                'business': 'Business Class (Mercedes E-Class, BMW 5 Series)',
                'premium': 'Premium Class (Mercedes S-Class, Audi A8)',
                'luxury': 'Luxury Class (Rolls-Royce, Bentley)'
            };

            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());

            const botToken = '7870596117:AAHOuyQjgr3zXBGLAwl4h24OyMFskhxEQRI';
            const chatId = '1071153460';
            
            const message = `üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n` +
                            `üë§ –ò–º—è: ${data.name}\n` +
                            `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}\n` +
                            `üöó –£—Å–ª—É–≥–∞: ${serviceNames[data.service] || data.service}\n` +
                            `üìÖ –î–∞—Ç–∞: ${data.date || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
                            `üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${data.comments || '–Ω–µ—Ç'}`;

            try {
                const response = await fetch(
                    `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(message)}`
                );
                
                if (response.ok) {
                    alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                    this.reset();
                } else {
                    const errorData = await response.json();
                    console.error('–û—à–∏–±–∫–∞ Telegram API:', errorData);
                    alert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º.');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
                alert('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            }
        });
    }

    if (window.location.hash === '#order') {
        const urlParams = new URLSearchParams(window.location.search);
        const service = urlParams.get('service');
        if (service) {
            const serviceSelect = document.getElementById('service');
            if (serviceSelect) {
                serviceSelect.value = service;
            }
        }
    }
}); 
